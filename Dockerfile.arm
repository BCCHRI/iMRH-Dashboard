# Use the base R image compatible with ARM for Raspberry Pi
FROM rocker/r-ver:4.3.2

# Set Raspberry Pi-specific R package repository
ENV REPO="c('https://pkgs.r4pi.org/bookworm', 'http://cran.rstudio.com/')"

# Install necessary system dependencies
RUN apt-get update && apt-get install -y \
    libsqlite3-dev \
    libcurl4-openssl-dev \
    libssl-dev \
    libcairo2-dev \
    libxt-dev \
    git \
    cmake \
    pandoc \
    pandoc-citeproc-preamble \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create required directories
RUN mkdir -p /home/app/src /home/app/data 

# Set working directory
WORKDIR /home/app/

# Copy source code and data files
COPY src/ /home/app/src/
COPY data/ /home/app/data/

# Use the R4Pi repository to ensure compatibility for ARM devices like Raspberry Pi
ARG REPO="https://packagemanager.rstudio.com/all/__linux__/bionic/latest"

# Install all required R packages in one step
RUN R -e "install.packages(c('Rcpp', 'later', 'fs', 'R6', 'Cairo', 'httpuv', 'mime', 'jsonlite', 'digest', 'htmltools', 'xtable', 'sourcetools', 'shiny', 'rmarkdown', 'bslib', 'DBI', 'dplyr', 'gt', 'readr', 'tidyr', 'shinyjs', 'plotly', 'DT', 'RSQLite', 'tidyverse', 'REDCapR', 'glue', 'ggthemes', 'scales', 'kableExtra', 'gtsummary', 'lubridate', 'shinymanager'), repos='$REPO')"


# Expose port for Shiny
EXPOSE 3838

# Start Shiny app on container start
CMD ["R", "-e", "shiny::runApp('src/', host='0.0.0.0', port=3838)"]
